Advices:
1- Use any user level solutions built on top of BPF like cilium, etc..
	this is super useful and will help to understand Linux kernel it self!
2-

===============================================================================
+
Learn BCC
https://kinvolk.io/blog/2020/04/adding-new-bcc-based-gadgets-in-inspektor-gadget/
https://blogs.oracle.com/linux/post/intro-to-bcc-1
+
bpftrace
https://github.com/iovisor/bpftrace/tree/master/docs
https://www.youtube.com/results?search_query=bpftrace+tutorial
+
libbpf
official: https://github.com/libbpf/libbpf
official: https://www.kernel.org/doc/html/latest/bpf/index.html
official: https://libbpf.readthedocs.io/en/latest/api.html
https://github.com/iovisor/bcc/tree/master/libbpf-tools
DONE: https://www.containiq.com/post/libbpf
https://en.pingcap.com/blog/tips-and-tricks-for-writing-linux-bpf-applications-with-libbpf/
https://github.com/pratyushanand/learn-bpf
https://cmd.com/blog/making-bpf-easy-with-libbpf-and-zig/
https://blogs.oracle.com/linux/post/bpf-application-development-and-libbpf
DONE: https://github.com/anakryiko/bpf-ringbuf-examples
DONE: https://nakryiko.com/
+




===============================================================================
Really important stuff you should read
===============================================================================
- https://docs.cilium.io/en/latest/bpf/
- https://qmonnet.github.io/whirl-offload/2016/09/01/dive-into-bpf/
- https://qmonnet.github.io/whirl-offload/
- https://ebpf.io/
- https://lore.kernel.org/bpf/
- https://nakryiko.com/posts/btf-dedup/
